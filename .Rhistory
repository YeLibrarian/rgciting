col_names <- list(CitedAs, Locatable, CitationDetail_RG, DOI_RG, AuthorUpload)
col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) x<-NA)
cleanColumn <- function(data, id){
AID <- seq(nrow(data))
AID <- paste(id, formatC(AID, width=3, flag="0"), sep="")
col_names <- list(CitedAs, Locatable, CitationDetail_RG, DOI_RG, AuthorUpload)
col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) x<-NA)
Format <- NA
Valid <- NA
Fulltext_Available <-NA
DOI_Available <- NA
Link_Available <- NA
RG_Details <- NA
Work_Type <- NA
emptyColumns <- sapply(data, function (x) all(is.na(x)))
data <- cbind(AID, Format, Valid, Fulltext_Available, DOI_Available, Link_Available, RG_Details, Work_Type, data[!emptyColumns])
}
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
install dplyr
package.install("dyplr")
package?
?
help(package)
install.packages("dyplr")
install.packages("dplyr")
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R')
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, NA))
data <- cbind(col_names)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, NA))
}
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, NA))
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
dataSetB <- DataIn("data/WOS_SciConf_Research_Gate_20180531.txt")
dataSetC <- DataIn("data/WOS_SciSocSci_ResearchGate_20180531.txt")
dataSetD <- DataIn("data/WOS_SciSocSci_Research_Gate_20180531.txt")
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, NA))
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, "hi"))
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, as.names)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, as.names)
data <- cbind(col_names, data)
}
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, as.name)
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, as.name)
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, "hi"))
print(col_names)
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
DataIn <- function(filename) {
data <- read.delim(filename, sep="\t", header = TRUE, row.names = NULL, fill = TRUE, na.strings = c("", " "), stringsAsFactors = FALSE)
colnames(data) <- c(colnames(data)[-1], "temp")
data <- data[ , 1:(ncol(data)-1)]
return(data)
}
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
dataSetB <- DataIn("data/WOS_SciConf_Research_Gate_20180531.txt")
dataSetC <- DataIn("data/WOS_SciSocSci_ResearchGate_20180531.txt")
dataSetD <- DataIn("data/WOS_SciSocSci_Research_Gate_20180531.txt")
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, "NA"))
print(col_names)
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) data <- cbind(x, data))
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) data <- cbind(x))
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
typeof(dataSetB)
colnames(dataSetB)
help("cbind")
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, "NA"))
print(col_names)
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
dataSetB <- CleanColumn(dataSetB, 'B')
View(dataSetB)
dataSetC <- CleanColumn(dataSetC, 'C')
View(dataSetC)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
# col_names <- lapply(col_names, function(x) assign(x, "NA"))
data <- cbind(col_names, data)
}
dataSetD <- CleanColumn(dataSetD, 'D')
View(dataSetD)
help("seq")
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
# col_names <- lapply(col_names, function(x) assign(x, "NA"))
data <- cbind(col_names, data)
data <- lapply(data[, seq(0, length(col_names))], function(x) x<-NA)
}
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
# col_names <- lapply(col_names, function(x) assign(x, "NA"))
data <- cbind(col_names, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x) x<-NA)
}
dataSetB <- CleanColumn(dataSetB, 'B')
View(dataSetC)
View(dataSetB)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
data <- lapply(col_names, function(x) cbind(x=NA, data))
# data <- cbind(col_names, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x) x<-NA)
}
write.csv(dataSetC, "Cleaned_Data/WOS_SciSocSci_ResearchGate_20180531.csv")
View(dataSetC)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
data <- lapply(col_names, function(x) cbind(x=NA, data))
# data <- cbind(col_names, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x) x<-NA)
}
dataSetD <- CleanColumn(dataSetD, 'D')
View(dataSetD)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- lapply(seq(0, length(col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
dataSetB <- DataIn("data/WOS_SciConf_Research_Gate_20180531.txt")
dataSetC <- DataIn("data/WOS_SciSocSci_ResearchGate_20180531.txt")
dataSetD <- DataIn("data/WOS_SciSocSci_Research_Gate_20180531.txt")
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- lapply(seq(0, length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
dataSetB <- CleanColumn(dataSetB, 'B')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- mapply(seq(0, length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- mapply(seq(0, length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- mapply(seq(0, length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
dataSetB <- CleanColumn(dataSetB, 'B')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- mapply(c(seq(0, length(new_col_names))), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
dataSetC <- CleanColumn(dataSetC, 'C')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- lapply(c(seq(0, length(new_col_names))), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
dataSetC <- CleanColumn(dataSetC, 'C')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- lapply(c(1:length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
dataSetC <- CleanColumn(dataSetC, 'C')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
curr_col_names <- names(data)
new_cols <- lapply(list(1:length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
names(data) <- c(new_col_names, curr_col_names)
}
dataSetC <- CleanColumn(dataSetC, 'C')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
names(new_cols) <- new_col_names
#new_cols <- lapply(list(1:length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
}
dataSetC <- CleanColumn(dataSetC, 'C')
install.packages("plyr")
require(plyr)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
new_cols <- rename(new_cols, new_col_names)
#new_cols <- lapply(list(1:length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
}
dataSetD <- CleanColumn(dataSetD, 'D')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- c("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
names(new_cols) <- new_col_names
#new_cols <- lapply(list(1:length(new_col_names)), function(x) assign(x, "NA"))
data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
}
dataSetB <- CleanColumn(dataSetB, 'B')
View(dataSetB)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- c("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
names(new_cols) <- new_col_names
data <- new_cols
#new_cols <- lapply(list(1:length(new_col_names)), function(x) assign(x, "NA"))
#data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- c("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
names(new_cols) <- c("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
data <- new_cols
#new_cols <- lapply(list(1:length(new_col_names)), function(x) assign(x, "NA"))
#data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
}
dataSetD <- CleanColumn(dataSetD, 'D')
View(dataSetD)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- c("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
colnames(new_cols) <- new_col_names
data <- new_cols
#new_cols <- lapply(list(1:length(new_col_names)), function(x) assign(x, "NA"))
#data <- cbind(new_cols, data)
#data <- lapply(data[, seq(0, length(col_names))], function(x)
}
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
dataSetB <- DataIn("data/WOS_SciConf_Research_Gate_20180531.txt")
dataSetC <- DataIn("data/WOS_SciSocSci_ResearchGate_20180531.txt")
dataSetD <- DataIn("data/WOS_SciSocSci_Research_Gate_20180531.txt")
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
help("colnames")
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
new_col_names <- c("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload",
"SourcePubs", "SourcePreprint", "SourceRepo", "SourceWebsite", "SourceURl",
"SourceDOI","ItemClass", "Copyrighted", "Licensed", "HCISI")
new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
colnames(new_cols) <- new_col_names
data <- cbind(AID, new_cols, data)
}
dataSetB <- CleanColumn(dataSetB, 'B')
View(dataSetB)
typeof(dataSetB)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
View(WOS_SciConf)
View(WOS_SciSocSci)
View(WOS_SciConf)
View(WOS_SciSocSci)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
View(WOS_SciConf)
