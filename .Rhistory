if(is.null(data_table[i,2]) | is.na(data_table[i,2])){
temp <- NA
} else {
temp <- read.delim(file_name, sep="\t", header = TRUE, row.names = NULL, fill = TRUE, fileEncoding = "UCS-2LE")
}
print(file_name)
#print(ncol(temp))
final_data <- rbind(final_data, temp)
}
print(nrow(final_data))
final_data <- cbind(data_table, final_data)
return(final_data)
}
c <- readFiles(data)
#The "CitationInput.R" script is to read in tab-delimited text files containing citations for the cited articles and generate a table to relate AIDs and CIDS and store citing article data
data_sheet <- paste(getwd(),"/ProcessedData/SCICONF.csv", sep="" )
data <- read.csv(data_sheet, row.names= NULL, fill = TRUE, header = FALSE, stringsAsFactors = FALSE)
#function to generate CID, rows for data input, and remove empty columns
createCID <- function(data, id = 'C') {
CID <- seq(nrow(data)) #generate sequence with length of data
CID <- paste(id, formatC(CID, width=3, flag="0"), sep="") #append number to 'C'
#emptyColumns <- sapply(article_data, function (x) all(is.na(x)))
new_col_names <- c("AID", "CitedAs", "Locatable")
#new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
colnames(data) <- new_col_names
data <- cbind(CID, data, stringsAsFactors = FALSE) #, article_data[!emptyColumns])
}
data <- createCID(data)
#input citation files
readFiles <- function(data_table){
file_name <- NULL
for(i in seq(nrow(data_table))) {
file_name <- paste(getwd(),"/Data/CitingArticles/", data_table[i, 1], ".txt", sep="" )
if(is.null(data_table[i,2]) | is.na(data_table[i,2])){
temp <- NA
} else {
temp <- read.delim(file_name, sep="\t", header = TRUE, row.names = NULL, fill = TRUE, fileEncoding = "UCS-2LE")
}
print(file_name)
#print(ncol(temp))
final_data <- rbind(final_data, temp)
}
print(nrow(final_data))
final_data <- cbind(data_table, final_data)
return(final_data)
}
c <- readFiles(data)
#The "CitationInput.R" script is to read in tab-delimited text files containing citations for the cited articles and generate a table to relate AIDs and CIDS and store citing article data
data_sheet <- paste(getwd(),"/ProcessedData/SCICONF.csv", sep="" )
data <- read.csv(data_sheet, row.names= NULL, fill = TRUE, header = FALSE, stringsAsFactors = FALSE)
#function to generate CID, rows for data input, and remove empty columns
createCID <- function(data, id = 'C') {
CID <- seq(nrow(data)) #generate sequence with length of data
CID <- paste(id, formatC(CID, width=3, flag="0"), sep="") #append number to 'C'
#emptyColumns <- sapply(article_data, function (x) all(is.na(x)))
new_col_names <- c("AID", "CitedAs", "Locatable")
#new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
colnames(data) <- new_col_names
data <- cbind(CID, data, stringsAsFactors = FALSE) #, article_data[!emptyColumns])
}
data <- createCID(data)
#input citation files
readFiles <- function(data_table){
final_data <- NULL
for(i in seq(nrow(data_table))) {
file_name <- paste(getwd(),"/Data/CitingArticles/", data_table[i, 1], ".txt", sep="" )
if(is.null(data_table[i,2]) | is.na(data_table[i,2])){
temp <- NA
} else {
temp <- read.delim(file_name, sep="\t", header = TRUE, row.names = NULL, fill = TRUE, fileEncoding = "UCS-2LE")
}
print(file_name)
#print(ncol(temp))
final_data <- rbind(final_data, temp)
}
print(nrow(final_data))
final_data <- cbind(data_table, final_data)
return(final_data)
}
c <- readFiles(data)
View(c)
#The "CitationInput.R" script is to read in tab-delimited text files containing citations for the cited articles and generate a table to relate AIDs and CIDS and store citing article data
data_sheet <- paste(getwd(),"/ProcessedData/SCICONF.csv", sep="" )
data <- read.csv(data_sheet, row.names= NULL, fill = TRUE, header = FALSE, stringsAsFactors = FALSE)
#function to generate CID, rows for data input, and remove empty columns
createCID <- function(data, id = 'C') {
CID <- seq(nrow(data)) #generate sequence with length of data
CID <- paste(id, formatC(CID, width=3, flag="0"), sep="") #append number to 'C'
#emptyColumns <- sapply(article_data, function (x) all(is.na(x)))
new_col_names <- c("AID", "CitedAs", "Locatable")
#new_cols <- matrix(nrow=nrow(data), ncol=length(new_col_names))
colnames(data) <- new_col_names
data <- cbind(CID, data, stringsAsFactors = FALSE) #, article_data[!emptyColumns])
}
data <- createCID(data)
#input citation files
readFiles <- function(data_table){
final_data <- NULL
for(i in seq(nrow(data_table))) {
file_name <- paste(getwd(),"/Data/CitingArticles/", data_table[i, 1], ".txt", sep="" )
if(is.null(data_table[i,2]) | is.na(data_table[i,2])){
temp <- NA
} else {
temp <- read.delim(file_name, sep="\t", header = TRUE, row.names = NULL, fill = TRUE, fileEncoding = "UCS-2LE")
}
print(file_name)
print(temp)
final_data <- rbind(final_data, temp)
}
print(nrow(final_data))
final_data <- cbind(data_table, final_data)
return(final_data)
}
c <- readFiles(data)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
#Read collected CitedAs, Locatable, and AID data for Citing Articles from spreadsheet
data_path <- paste(getwd(),"/ProcessedData/SCICONF_Copy.csv", sep="" )
data <- read.csv(data_path, row.names= NULL, fill = TRUE, header = FALSE, stringsAsFactors = FALSE)
#function to generate CIDs
CreateCID <- function(data, id = 'C') {
CID <- seq(nrow(data)) #generate sequence with length of data
CID <- paste(id, formatC(CID, width=3, flag="0"), sep="") #append number to 'C'
new_col_names <- c("AID", "CitedAs", "Locatable")
colnames(data) <- new_col_names
data <- cbind(CID, data, stringsAsFactors = FALSE) #, article_data[!emptyColumns])
}
#function to import data, correct the mistake in column header (extra row.names for the first column).
DataIn <- function(file_name) {
temp_data <- NULL
temp_data <- read.delim(file_name, sep="\t", header = TRUE, row.names = NULL, fill = TRUE, na.strings = c("", " "), stringsAsFactors = FALSE, , fileEncoding = "UCS-2LE")
colnames(temp_data) <- c(colnames(temp_data)[-1], "temp")
temp_data <- temp_data[ , 1:(ncol(temp_data)-1)]
return(temp_data)
}
data <- CreateCID(data)
View(data)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
debugSource('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
debugSource('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
debugSource('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
debugSource('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
debugSource('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
print(temp_data)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
for(i in seq(nrows(data))) {
file_name <- paste(getwd(),"/Data/CitingArticles/", data[i, 1], ".txt", sep="" )
if(is.na(data[i,2]) && is.na(data[i,3]) && is.na(data[i,4])){
temp_data <- NA
print("Missing file")
print(file_name)
next;
} else {
temp_data <- DataIn(file_name)
}
print(file_name)
final_data <- rbind(final_data, temp_data)
}
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
final_data <- rbind(final_data, temp_data)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/Copyright.R', echo=TRUE)
t <- data[ (data['Copyrighted'] == 'Yes' & !is.na(data['Copyrighted'])) & (data['FulltextAvailable'] == 'Yes' & !is.na(data['FulltextAvailable']))  , ]
View(t)
full_copyright <- data[ (data['Copyrighted'] == 'Yes' & !is.na(data['Copyrighted'])) & (data['FulltextAvailable'] == 'Yes' & !is.na(data['FulltextAvailable'])) , ]
View(full_copyright)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/Copyright.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/Copyright.R', echo=TRUE)
View(copyright_info)
copyright_info <- full_copyright[,c("AID", "AU", "TI")]
View(copyright_info)
copyright_info <- full_copyright[,c("Copyrighted", "FulltextAvailable",AID", "AU", "TI")]
copyright_info <- full_copyright[,c("Copyrighted", "FulltextAvailable", "AID", "AU", "TI")]
View(copyright_info)
_copyright)
full_copyright <- data[ (data['Copyrighted'] == 'Yes' & !is.na(data['Copyrighted'])) & (data['FulltextAvailable'] == 'Yes' & !is.na(data['FulltextAvailable'])) , ]
copyright_info <- full_copyright[,c("Copyrighted", "FulltextAvailable", "AID", "AU", "TI")]
nrow(full_copyright)
copyright_info <- rbind(nrow(full_copyright), copyright_info)
View(copyright_info)
copyright_locs <- data[ (data['Copyrighted'] == 'Yes' & (!is.na(data[c("SourceRepo", "SourcePreprint", "SourceWebsite")])) , ]
copyright_locs <- data[(data['Copyrighted'] == 'Yes' & (!is.na(data[c("SourceRepo", "SourcePreprint", "SourceWebsite"),])) , ]
copyright_locs <- data[(data['Copyrighted'] == 'Yes' & (!is.na(data[c("SourceRepo", "SourcePreprint", "SourceWebsite"),])) , ]
copyright_locs <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data[c("SourceRepo", "SourcePreprint", "SourceWebsite"),])) , ]
copyright_locs <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data[c("SourceRepo", "SourcePreprint", "SourceWebsite")])) , ]
copyright_locs <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourceRepo"])) ,]
View(copyright_locs)
copyright_locs <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourceRepo"]) & data["SourceRepo"] == 'Yes') ,]
View(copyright_locs)
copyright_repo <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourceRepo"]) & data["SourceRepo"] == 'Yes') ,]
copyright_repo <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourceRepo"]) & data["SourceRepo"] == 'Yes') ,]
copyright_preprint <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourcePreprint"]) & data["SourcePreprint"] == 'Yes') ,]
View(copyright_preprint)
View(copyright_repo)
copyright_website <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourceWebsite"]) & data["SourceWebsite"] == 'Yes') ,]
copyright_website <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["FulltextAvailable"]) & data["FulltextAvailable"] == 'Yes') ,]
View(copyright_website)
copyright_repo <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourceRepo"]) & data["SourceRepo"] == 'Yes') ,]
copyright_preprint <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourcePreprint"]) & data["SourcePreprint"] == 'Yes') ,]
copyright_website <- data[ (data['Copyrighted'] == 'Yes') & (!is.na(data["SourceWebsite"]) & data["SourceWebsite"] == 'Yes') ,]
full_copyright <- data[ (data['DOI_RG'] == 'Yes' & !is.na(data['DOI_RG'])) & (data['SourcePubs'] == 'No'), ]
doirg <- data[ (data['DOI_RG'] == 'Yes' & !is.na(data['DOI_RG'])) & (data['SourcePubs'] == 'No'), ]
View(doirg)
#Read collected CitedAs, Locatable, and AID data for Citing Articles from spreadsheet
data_path <- paste(getwd(),"/ProcessedData/SCICONF_Copy.csv", sep="" )
source('//hornet/Users/a/agoldenlasher/adit/My Documents/RG Citations/rgciting/Scripts/CitationInput.R', echo=TRUE)
#how many articles are cited as Title, URL, etc
cited_as <- count(citing_data, 'CitedAs')
install.packages('plyr')
library(plyr)
#install.packages('plyr')
library(plyr)
citing_path <- paste(getwd(),"/ProcessedData/WOS_SciConf_CitingArticles.csv", sep="" )
citing_data <- read.csv(citing_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
#how many articles are locatable
locatable <- count(citing_data, 'Locatable')
#how many articles are cited as Title, URL, etc
cited_as <- count(citing_data, 'CitedAs')
View(cited_as)
test <- citing_data[(citing_data['Cited_As'] == 'Title')]
test <- citing_data[(citing_data['Cited_As'] == 'Title'),]
#install.packages('plyr')
library(plyr)
citing_path <- paste(getwd(),"/ProcessedData/WOS_SciConf_CitingArticles.csv", sep="" )
citing_data <- read.csv(citing_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
test <- citing_data[(citing_data['Cited_As'] == 'Title'),]
test <- citing_data[(citing_data['Cited_As'] == 'Title',),]
test <- citing_data[(citing_data['Cited_As'] == 'Title'), ]
#copyrighted articles w/ fulltext available on research gate
full_copyright <- data[ (data['Copyrighted'] == 'Yes' & !is.na(data['Copyrighted'])) & (data['FulltextAvailable'] == 'Yes' & !is.na(data['FulltextAvailable'])) , ]
#copyrighted articles w/ fulltext available on research gate
full_copyright <- data[ (data['Copyrighted'] == 'Yes' & !is.na(data['Copyrighted'])) & (data['FulltextAvailable'] == 'Yes' & !is.na(data['FulltextAvailable'])) , ]
copyright_info <- full_copyright[,c("Copyrighted", "FulltextAvailable", "AID", "AU", "TI")]
copyright_info <- rbind(nrow(full_copyright), copyright_info)
citing_path <- paste(getwd(),"/ProcessedData/WOS_SciConf_CitingArticles.csv", sep="" )
citing_data <- read.csv(citing_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
data_path <- paste(getwd(),"/ProcessedData/WOS_SciConf_20180531_Edited.csv", sep="" )
data <- read.csv(data_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
#copyrighted articles w/ fulltext available on research gate
full_copyright <- data[ (data['Copyrighted'] == 'Yes' & !is.na(data['Copyrighted'])) & (data['FulltextAvailable'] == 'Yes' & !is.na(data['FulltextAvailable'])) , ]
citing_data[ (citing_data['CitedAs'] == 'Title' & !is.na(citing_data['CitedAs']))  , ]
test <- citing_data[ (citing_data['CitedAs'] == 'Title' & !is.na(citing_data['CitedAs']))  , ]
View(test)
test <- data[(citing_data[ (citing_data['CitedAs'] == 'Title' & !is.na(citing_data['CitedAs']))  , "AID" ]) & (!is.na(data['Source_Pubs']), ]
test <- data[(citing_data[ (data["AID"] == (citing_data['CitedAs'] == 'Title' & !is.na(citing_data['CitedAs'])  , "AID" ]) & (!is.na(data['Source_Pubs']))), ]
test <- data[(data["AID"] == citing_data[(citing_data['Cited_As'] == 'Title'), ]) & (!is.na(citing_data['CitedAs'])) ,]
test <- data[(data["AID"] == citing_data[(citing_data['Cited_As'] == 'Title'), "AID"]) & (!is.na(citing_data['CitedAs'])) ,]
test <- data[(data["AID"] == citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]) & (!is.na(citing_data['CitedAs'])) ,]
test <- data[(data["AID"] == (citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])) & (!is.na(citing_data['CitedAs'])) ,]
data_path <- paste(getwd(),"/ProcessedData/WOS_SciConf_20180531_Edited.csv", sep="" )
test <- data[(data["AID"] == (citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])) & (!is.na(citing_data['CitedAs'])) ,]
test <- data[(data["AID"] %in% (citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])) & (!is.na(citing_data['CitedAs'])) ,]
View(test)
test <- citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])
test <- citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]
i
test <- data[(data["AID"] %in% (citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])) ) ,]
test <- data[(data["AID"] %in% (citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])) ) ,]
& (!is.na(citing_data['CitedAs'])
test <- data[(data["AID"] %in% (citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])) ) ,]
test <- data[(data["AID"] %in% (citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]) ) ,]
test <- citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]
test <- data[(data["AID"] %in% test, "AID"]) ) ,]
test <- citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]
test <- data[(data["AID"] %in% test) ) ,]
test <- citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]
test <- data[(data["AID"] %in% test)  ,]
View(test)
test <- citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]
test <- data[(is.element(data["AID"], test)  ,]
test <- data[(is.element(data["AID"], test))  ,]
View(test)
View(data)
test <- data.frame(citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])
test <- data[(is.element(data["AID"], test))  ,]
test <- data.frame(citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])
View(test)
data[(data["AID"]),]
data[(data["AID"],),]
data[(data["AID",]),]
data[(data["AID"]),]
t <- data[(data["AID"]),]
test <- data.frame(citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])
t <- data[(data["AID"] %in% test),]
data["AID"] %in% test
data[test,]
test <- citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]
data[test,,]
test <- citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]
data[c(test),]
View(t)
t <- data[c(test),]
View(t)
data <- read.csv(data_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
t <- data[c(test),]
View(t)
test <- data[(is.element(data["AID"], test))  ,]
test <- unlist(citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])
t <- data[test,]
View(t)
#& (!is.na(citing_data['CitedAs'])
t <- data[test,]
View(t)
data_path <- paste(getwd(),"/ProcessedData/WOS_SciConf_20180531_Edited.csv", sep="" )
data <- read.csv(data_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
#& (!is.na(citing_data['CitedAs'])
t <- data[test,]
View(t)
#& (!is.na(citing_data['CitedAs'])
t <- data[test,"AU"]
#& (!is.na(citing_data['CitedAs'])
t <- data[(data["AID",] %in% test),]
View(t)
#& (!is.na(citing_data['CitedAs'])
t <- data[(data["AID",] %in% test),]
View(t)
#& (!is.na(citing_data['CitedAs'])
t <- data[(data[,"AID"] %in% test),]
View(t)
t <- data[(data[,"AID"] %in% test) & (!is.na(data[,"SourcePubs"])),]
View(t)
print(test)
test <- unlist(unique(citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]))
print(test)
t <- data[(data[,"AID"] %in% test) & (!is.na(data[,"SourcePubs"])),]
View(t)
t <- data[(data[,"AID"] %in% test) & (!is.na(data[,"SourcePubs"])) & (data[,"SourcePubs"] != "No"),]
View(t)
title_source <- data[(data[,"AID"] %in% test) & (!is.na(data[,"SourcePubs"])) & (data[,"SourcePubs"] != "No"),]
temp_titles <- unlist(unique(citing_data[(citing_data['CitedAs'] == 'Title'), "AID"]))
title_source <- data[(data[,"AID"] %in% temp_titles) & (!is.na(data[,"SourcePubs"])) & (data[,"SourcePubs"] != "No"),]
title_source <- data[(data[,"AID"] %in% temp_titles) & (!is.na(data[,"SourcePubs"])) & (data[,"SourcePubs"] != "No"),]
title_source <- article_data[(article_data[,"AID"] %in% temp_titles) & (!is.na(article_data[,"SourcePubs"])) & (article_data[,"SourcePubs"] != "No"),] #remove values that are NA or No
article_data <- read.csv(data_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
title_source <- article_data[(article_data[,"AID"] %in% temp_titles) & (!is.na(article_data[,"SourcePubs"])) & (article_data[,"SourcePubs"] != "No"),] #remove values that are NA or No
#how many articles are cited as Title, URL, etc
cited_as <- count(citing_data, 'CitedAs')
#b2: how many articles cited as a title but have details available in RG
title_source <- article_data[(article_data[,"AID"] %in% temp_titles) & (article_data[,"Citationdetail_RG"] == "Yes"),] #remove values that are NA or No
#b2: how many articles cited as a title but have details available in RG
title_source <- article_data[(article_data[,"AID"] %in% temp_titles) & (article_data[,"CitationDetail_RG"] == "Yes"),] #remove values that are NA or No
#b2: how many articles cited as a title but have details available in RG
title_details <- article_data[(article_data[,"AID"] %in% temp_titles) & (article_data[,"CitationDetail_RG"] == "Yes"),] #remove values that are NA or No
View(title_details)
#b2: how many articles cited as a title but have details available in RG
title_details <- article_data[(article_data[,"AID"] %in% temp_titles) & (article_data[,"CitationDetail_RG"] == "Yes") & (!is.na(article_data[,"CitationDetail_RG"])),] #remove values that are NA or No
View(title_details)
#b3: Sources that have citing articles citing the original source AND a research gate source
temp <- citing_data[, !unique(citing_data["AID"])]
unique(citing_data["AID"])
!unique(citing_data["AID"])
duplicated(citing_data["AID"])
citing_data[,duplicated(citing_data["AID"])]
citing_data[duplicated(citing_data["AID"])]
citing_data[, (citing_data["AID"] %in% citing_data[,duplicated(citing_data["AID"])])
citing_data[!duplicated(citing_data$AID),]
citing_data[!duplicated(citing_data$AID), ]
t <- citing_data[!duplicated(citing_data$AID), ]
View(t)
t <- citing_data[duplicated(citing_data$AID), ]
View(t)
t <- citing_data[duplicated(citing_data$AID), ]
View(t)
un <- citing_data[!unique(citing_data$AID), ]
un <- citing_data[unique(citing_data$AID), ]
un <- citing_data[duplicated(citing_data$AID), ]
View(un)
View(citing_data)
?duplicated
?unique
un <- citing_data[unique(citing_data$AID), ]
View(un)
un <- citing_data[,unique(citing_data$AID) ]
un <- citing_data[unique(citing_data$AID), ]
View(un)
un <- citing_data[anyDuplicated(citing_data$AID, .keep), ]
un <- citing_data[anyDuplicated(citing_data$AID), ]
View(un)
un <- citing_data[duplicated(citing_data$AID, .keep_all = TRUE), ]
View(un)
copyright_count <- count(data, 'Copyrighted')
#install.packages('plyr')
library(plyr)
#install.packages('plyr')
library(plyr)
#determine data paths/read data for citing articles and articles
citing_path <- paste(getwd(),"/ProcessedData/WOS_SciConf_CitingArticles.csv", sep="" )
citing_data <- read.csv(citing_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
data_path <- paste(getwd(),"/ProcessedData/WOS_SciConf_20180531_Edited.csv", sep="" )
article_data <- read.csv(data_path, row.names= NULL, fill = TRUE, header = TRUE, stringsAsFactors = FALSE)
#Additional Stats
#Copyright count
copyright_count <- count(article_data, 'Copyrighted')
#fulltext count
fulltext_count <- count(article_data, 'FulltextAvailable')
#how are articles cited as: Title, URL, etc
cited_as <- count(citing_data, 'CitedAs')
#types of articles
article_type <- count(article_data, 'ItemClass')
# a1: how many articles are locatable
locatable <- count(citing_data, 'Locatable')
locatable_articles <- citing_data[ (citing_data$Locatable == 'Yes') & (!is.na(citing_data$Locatable)),]
#b1: how many articles were cited as title but have true source
temp_titles <- unlist(unique(citing_data[(citing_data['CitedAs'] == 'Title'), "AID"])) #removed duplicate AIDs
title_source <- article_data[(article_data[,"AID"] %in% temp_titles) & (!is.na(article_data[,"SourcePubs"])) & (article_data[,"SourcePubs"] != "No"),] #remove values that are NA or No
#b2: how many articles cited as a title but have details available in RG
title_details <- article_data[(article_data[,"AID"] %in% temp_titles) & (article_data[,"CitationDetail_RG"] == "Yes") & (!is.na(article_data[,"CitationDetail_RG"])),] #remove values that are NA or No
#b3: Sources that have citing articles citing the original source AND a research gate source
temp <- citing_data[duplicated(citing_data["AID"]),]$AID #get the AIDs that are duplicated
dups <- citing_data[(citing_data$AID %in% temp), ] #extract duplicated rows
original_title <- ddply(dups,~AID,summarise,TF=(grep("Title", as.character(unique(CitedAs))) & grep("Original",as.character(unique(CitedAs)))))
#c1: articles with no publication source/DOI RG
doirg <- article_data[ (article_data['DOI_RG'] == 'Yes' & !is.na(article_data['DOI_RG'])) & (article_data['SourcePubs'] == 'No'), ]
# d1: copyrighted articles w/ fulltext available on research gate
full_copyright <- article_data[ (article_data['Copyrighted'] == 'Yes' & !is.na(article_data['Copyrighted'])) & (article_data['FulltextAvailable'] == 'Yes' & !is.na(article_data['FulltextAvailable'])) , ]
copyright_info <- full_copyright[,c("Copyrighted", "FulltextAvailable", "AID", "AU", "TI")]
copyright_info <- rbind(nrow(full_copyright), copyright_info)
#d2: num copyrighted articles with also fulltext in specified locations
copyright_repo <- article_data[ (article_data['Copyrighted'] == 'Yes') & (!is.na(article_data['Copyrighted'])) & (!is.na(article_data["SourceRepo"])) & (article_data['SourceRepo'] != 'No'),]
copyright_preprint <- article_data[ (article_data['Copyrighted'] == 'Yes') & (!is.na(article_data['Copyrighted'])) & (!is.na(article_data["SourcePreprint"])) & (article_data['SourcePreprint'] != 'No'),]
copyright_website <- article_data[ (article_data['Copyrighted'] == 'Yes') & (!is.na(article_data['Copyrighted'])) & (!is.na(article_data["SourceWebsite"])) & (article_data['SourceWebsite'] != 'No'),]
#d3: copyrighted articles with no full text available on RG
copyright_no_fulltext <- article_data[ (article_data['Copyrighted'] == 'Yes') & (!is.na(article_data['Copyrighted'])) & (!is.na(article_data["FulltextAvailable"])) & (article_data['FulltextAvailable'] == 'No'),]
#d4: Articles w/ OA or Cretive Commons License
oa_num <- article_data[ !is.na(article_data['Licensed']) & article_data['Licensed']!="No", ]
#d4: Articles w/ HCISI option
hcisi <- article_data[ !is.na(article_data['HCISI']) & article_data['HCISI']!="No", ]
#Create table to summarize results
names <- c("A1", "B1", "B2", "B3", "C1", "D1","D2R", "D2P", "D2W", "D3", "D4O", "D4H")
table <- NULL
table <- rbind(table,
c("How many of the articles were locatable",nrow(locatable_articles), list(locatable_articles$AID)),
c("Articles cited as a title but have a True source", nrow(title_source), list(title_source$AID)),
c("Articles cited as a title but have details available in researchgate", nrow(title_details), list(title_details$AID)),
c("Citing articles citing the original source AND a research gate source", nrow(original_title), list(original_title$AID)),
c("Articles that have RG Doi/no other source", nrow(doirg), list(doirg$AID)),
c("Articles that are copyrighted and have full text available on RG", nrow(full_copyright), list(full_copyright$AID)),
c("Copyrighted articles on repository", nrow(copyright_repo), list(copyright_repo$AID)),
c("Copyrighted articles on preprint", nrow(copyright_preprint), list(copyright_preprint$AID)),
c("Copyrighted atricles on website", nrow(copyright_website), list(copyright_website$AID)),
c("Articles that are copyrighted and have NO full text available", nrow(copyright_no_fulltext), list(copyright_no_fulltext$AID)),
c("Open Access articles", nrow(oa_num), list(oa_num$AID)),
c("HCISI articles", nrow(hcisi), list(hcisi$AID)))
table <- data.frame(table)
row.names(table) <- names
colnames(table) <- c("Question", "Number Matches", "AIDs of Matches")
View(table)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
source(PrelimStats.R)
source(/Script/PrelimStats.R)
source("/Script/PrelimStats.R"")
source("/Script/PrelimStats.R")
source("/Script/PrelimStats.R")
pwd
source("./Script/PrelimStats.R")
source('~/Documents/GitHub/rgciting/Scripts/PrelimStats.R')
rm(list=ls())
source('~/Documents/GitHub/rgciting/Scripts/PrelimStats.R')
View(citing_data)
View(article_data)
View(citing_data)
knitr::opts_chunk$set(echo = TRUE)
read_chunk('PrelimStats.R')  #not working yet. needs to be fixed for the file path in read.table in the PrelimStats file.
knitr::read_chunk('PrelimStats.R')
## @knitr a1
# a1: how many articles are locatable
locatable <- count(citing_data, 'Locatable')
#install.packages('plyr')
install.packages('kableExtra)
#install.packages('plyr')
install.packages('kableExtra')
##@knitr part1
library(plyr)
#install.packages('plyr')
install.packages('knitr')
#install.packages('plyr')
install.packages('knitr')
install.packages('plyr')
install.packages('knitr')
install.packages("knitr")
install.packages("plyr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
