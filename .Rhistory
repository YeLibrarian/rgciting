help function()
function()
data <- read.table("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header=TRUE)
print(data)
print(data)
data <- read.table("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header=TRUE)
data
A <- read.table("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header=TRUE)
A <- read.table("data/WOS_SciConf_Research_Gate_20180531.txt", sep="\t", header=TRUE)
A <- read.table("data/WOS_SciConf_Research_Gate_20180531.txt", sep="\t")
A <- read.table("data/WOS_SciConf_Research_Gate_20180531.txt", sep="\t")
A <- read.table("data/WOS_SciSocSci_ResearchGate_20180531.txt", sep="\t")
A <- read.table("data/WOS_SciSocSci_ResearchGate_20180531.txt", sep="\t", header=TRUE, fill = TRUE)
A <- read.table("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header = TRUE, fill = TRUE)
A <- read.table("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header = TRUE, fill = TRUE, row.names = FALSE)
A <- read.table("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header = TRUE, fill = TRUE, row.names = NULL)
View(A)
A <- read.delim("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header = TRUE, fill = TRUE, row.names = NULL)
View(A)
A <- read.delim("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header = TRUE, row.names = NULL)
A
View(A)
dataSetA <- read.delim("data/WOS_SciConf_ResearchGate_20180531.txt", sep="\t", header = TRUE, row.names = NULL, fill = TRUE)
dataSetB <- read.delim("data/WOS_SciConf_Research_Gate_20180531.txt", sep="\t", header = TRUE, row.names = NULL, fill = TRUE)
dataSetC <- read.delim("data/WOS_SciSocSci_ResearchGate_20180531.txt", sep="\t", header = TRUE, row.names = NULL, fill = TRUE)
dataSetD <- read.delim("data/WOS_SciSocSci_Research_Gate_20180531.txt", sep="\t", header = TRUE, row.names = NULL, fill = TRUE)
View(A)
View(dataSetA)
View(dataSetA)
View(dataSetB)
View(dataSetA)
View(A)
clear(A)
help(remove)
rm(A
)
View(dataSetA)
AID <- seq(nrow(data))
AID <- paste(id, formatC(AID, width=3, flag="0"), sep="")
col_names <- list(CitedAs, Locatable, CitationDetail_RG, DOI_RG, AuthorUpload)
col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) x<-NA)
cleanColumn <- function(data, id){
AID <- seq(nrow(data))
AID <- paste(id, formatC(AID, width=3, flag="0"), sep="")
col_names <- list(CitedAs, Locatable, CitationDetail_RG, DOI_RG, AuthorUpload)
col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) x<-NA)
Format <- NA
Valid <- NA
Fulltext_Available <-NA
DOI_Available <- NA
Link_Available <- NA
RG_Details <- NA
Work_Type <- NA
emptyColumns <- sapply(data, function (x) all(is.na(x)))
data <- cbind(AID, Format, Valid, Fulltext_Available, DOI_Available, Link_Available, RG_Details, Work_Type, data[!emptyColumns])
}
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
install dplyr
package.install("dyplr")
package?
?
help(package)
install.packages("dyplr")
install.packages("dplyr")
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R')
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
source('Z:/adit/My Documents/RG Citations/rgciting/Scripts/ArticleInput.R', echo=TRUE)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, NA))
data <- cbind(col_names)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, NA))
}
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, NA))
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
dataSetA <- DataIn("data/WOS_SciConf_ResearchGate_20180531.txt")
dataSetB <- DataIn("data/WOS_SciConf_Research_Gate_20180531.txt")
dataSetC <- DataIn("data/WOS_SciSocSci_ResearchGate_20180531.txt")
dataSetD <- DataIn("data/WOS_SciSocSci_Research_Gate_20180531.txt")
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, NA))
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
View(dataSetA)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, "hi"))
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
View(dataSetA)
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, as.names)
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, as.names)
data <- cbind(col_names, data)
}
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, as.name)
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, as.name)
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
#function to remove empty columns and generate AID
CleanColumn <- function(data, id){
AID <- paste(id, formatC(seq(nrow(data)), width=3, flag="0"), sep="")
col_names <- list("CitedAs", "Locatable", "CitationDetail_RG", "DOI_RG", "AuthorUpload")
#col_names1 <- list(SourcePubs, SourcePrepring, SourceRepo, SourceWebsite, SourceURl, SourceDOI)
# col_names2 <- list(ItemClass, Copyrighted, Licensed, HCISI)
col_names <- lapply(col_names, function(x) assign(x, "hi"))
print(col_names)
data <- cbind(col_names, data)
}
#run cleanColumn function over data sets
dataSetA <- CleanColumn(dataSetA, 'A')
